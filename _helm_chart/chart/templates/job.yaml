{{- if .Values.seed_database }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "chart.fullname" . }}-seed
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-1"
spec:
  backoffLimit: 8
  template:
    metadata:
      name: {{ .Chart.Name }}-seed
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-mercator-ready
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: [ 'sh', '-c',
            'until [ "$(curl -s -o /dev/null -w ''%{http_code}'' {{ include "chart.fullname" . }}:{{ .Values.service.port }}/login)" -eq "200" ];
          do echo waiting for {{ include "chart.fullname" . }}:{{ .Values.service.port }}/login; sleep 10; done;' ]
      containers:
        - name: seed
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["php", "artisan", "migrate:fresh", "--force", "--seed"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APP_NAME
            value: {{ .Chart.Name | quote }}
          - name: REDIS_HOST
            value: {{ .Values.redis.fullnameOverride | quote }}
          - name: REDIS_PASSWORD
            value: "null"
          - name: REDIS_PORT
            value: "6379"
          - name: DB_CONNECTION
            value: "pgsql"
          - name: DB_HOST
            value: {{ .Values.postgresql.fullnameOverride | quote }}
          - name: DB_PORT
            value: "5432"
          - name: DB_DATABASE
            value: {{ .Values.postgresql.auth.database | quote }}
          - name: DB_USERNAME
            value: {{ .Values.postgresql.auth.username | quote }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.auth.existingSecret | quote }}
                key: password
{{- end }}